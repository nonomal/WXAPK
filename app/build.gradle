apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

android {
    compileSdk = 34

    buildFeatures {
        viewBinding = true
    }

    defaultConfig {
        applicationId "com.twiceyuan.wxapk"
        minSdk = 21
        targetSdk = 34
        namespace = "com.twiceyuan.wxapk"
        versionCode getAppVersionCode()
        versionName getLastTagName()
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            if (System.getenv("CI") != null) {
                storeFile file(System.env.TWICEYUAN_KEYSTORE)
                storePassword System.env.TWICEYUAN_KEYSTORE_PASSWD
                keyAlias System.env.TWICEYUAN_KEY_ALIAS
                keyPassword System.env.TWICEYUAN_KEY_PASSWD
            } else {
                String keystore = System.env.WXAPK_KEYSTORE
                storeFile file(keystore == null ? "/dev/null" : keystore)
                storePassword System.env.WXAPK_KEYSTORE_PASSWD
                keyAlias System.env.WXAPK_KEY_ALIAS
                keyPassword System.env.WXAPK_KEY_PASSWD
            }
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.release
        }
        release {
            minifyEnabled true
            shrinkResources true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    applicationVariants.configureEach { variant ->
        if (variant.buildType.name != "release") return
        outputs.forEach {
            def buildTypeName = variant.buildType.name
            def version = "$versionName-$versionCode"
            it.outputFileName = "WXAPK-${version}-${buildTypeName}.apk"
        }
    }

    sourceSets.configureEach {
        languageSettings {
            languageVersion = "2.0"
        }
    }
}

// 根据 runner action 编号生成版本号
def getAppVersionCode() {
    def properties = new Properties()
    properties.load(new FileInputStream(rootProject.file("local.properties")))
    def version = properties.getProperty("GITHUB_RUN_NUMBER") ?: System.getenv("GITHUB_RUN_NUMBER")
    return version != null ? version.toInteger() : 1
}

// 获取最新的 tag 名称
def getLastTagName() {
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'describe', '--abbrev=0', '--tags'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

tasks.register('printVersionInfo') {
    doLast {
        println "VersionName: ${getLastTagName()}, VersionCode: ${getAppVersionCode()}"
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.documentfile:documentfile:1.0.1'
    implementation 'androidx.activity:activity-ktx:1.9.1'
}
